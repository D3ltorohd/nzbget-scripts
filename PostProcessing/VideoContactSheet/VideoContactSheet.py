#!/usr/bin/env python2
#
##############################################################################
### NZBGET POST-PROCESSING SCRIPT                                          ###

# VideoContactSheet
#
# This script allows you to automatically create video contact sheets
#
# NOTE: requires python 2.7.
# NOTE: also requires vcs, ffmpeg and imagemagick to be installed and available in PATH.
# NOTE: Version Beta: 0.1.

##############################################################################
### OPTIONS                                                                ###

# PATH to vcs.
#
# absolute path to vcs if this is empty it must be in PATH
#vcsBin=

# Additional PATH.
#
# Append this to the PATH before executing
#additionalPath=/usr/local/bin:/opt/bin/

# Media Extensions
#
# This is a list of media extensions that are used to verify that the download does contain valid media.
#mediaExtensions=.mkv,.avi,.divx,.xvid,.mov,.wmv,.mp4,.mpg,.mpeg,.vob,.iso

# Configuration File
#
# Absolute path to a vcs config file or use settings down below for basic settings
# This overwrites ALL settings below
#vcsConf=

# Number of Screens to capture
#
#numcaps=20

# Disable Shadows (yes, no).
#
# disable shadows on single images
#disable_shadows=yes

# Number of columns
#
# split images in x columns
#columns=4

# Height of the single captures
#
# either % or absolute value in px
#height=160

# Username
#
# set a username write in the footer, to disable set Anonymous to yes
#user=nzbget

# Anonymous mode (yes, no).
#
# don't include 'generated by username' in the footer
#anonymous=yes

# Timestamps (yes, no).
#
#timestamps=yes

# Font to use
#
# either name or absolute path with .ttf
#font=OpenSans

# Log level (info, warn, quiet).
#
# change log level of Video Contact Sheet
#quiet=info


# Output format (jpg, png)
#
# define in which format the screencaps will be saved
# format=png

# Funky Mode (none, overlap, rotate, photoframe, polaroidframe, photos, polaroid, film, random).
#
# output modes in which the contact sheet gets a more informal look.
#funky=none

### NZBGET POST-PROCESSING SCRIPT                                          ###
##############################################################################

import sys
import os
import fnmatch
import subprocess

# Exit codes used by NZBGet
POSTPROCESS_SUCCESS=93
POSTPROCESS_ERROR=94


if not os.environ.has_key('NZBOP_SCRIPTDIR'):
    print "[ERROR] Dieses Skript kann nur von NZBGet (13.0 oder neuer) ausgefuehrt werden."
    sys.exit(POSTPROCESS_ERROR)

if os.environ['NZBOP_VERSION'][0:5] < '13.0':
    print "[ERROR] NZBGet Version %s wird nicht unterstuetzt. Bitte NZBGet updaten." % (str(os.environ['NZBOP_VERSION']))
    sys.exit(POSTPROCESS_ERROR)

if not os.path.exists(os.environ.get('NZBPP_DIRECTORY')):
    print "[ERROR] Directory does not exist!"
    sys.exit(POSTPROCESS_ERROR)

# if 'FAILURE' in os.environ['NZBPP_STATUS']:
#     print "[ERROR] got status '%s' from NZBget. exiting" % os.environ['NZBPP_STATUS']
#     sys.exit(POSTPROCESS_ERROR)

if not os.environ['NZBPP_TOTALSTATUS'] == 'SUCCESS':
    print "[ERROR] got status '%s' from NZBget. exiting" % os.environ['NZBPP_TOTALSTATUS']
    sys.exit(POSTPROCESS_ERROR)

#print "VideoContactSheet is run from NZBGet Version [%s]." % (str(os.environ['NZBOP_VERSION']))

def buildOptions(current_file):
    if os.environ.get('NZBPO_VCSBIN') != "":
        args = [os.environ.get('NZBPO_VCSBIN')]
    else:
        args = ['vcs']

    #no color output!
    args.append('-Wc')

    output_file = current_file + ".png"
    #if we have a config file use it, else create commands
    if os.environ.get('NZBPO_VCSCONF'):
        args.append('--config')
        args.append(os.environ.get('NZBPO_VCSCONF'))
    else:
        if os.environ.get('NZBPO_NUMCAPS'):
            args.append('--numcaps')
            args.append(os.environ.get('NZBPO_NUMCAPS'))
        if os.environ.get('NZBPO_QUIET') != "info":
            args.append('--quiet')
        if os.environ.get('NZBPO_QUIET') == "quiet":
            args.append('--quiet')
        if os.environ.get('NZBPO_USER'):
            args.append('--user')
            args.append(os.environ.get('NZBPO_USER'))
        if os.environ.get('NZBPO_ANONYMOUS') == "yes":
            args.append('--anonymous')
        if os.environ.get('NZBPO_DISABLE_SHADOWS') == "yes":
            args.append('--disable')
            args.append('shadows')
        if os.environ.get('NZPBO_HEIGHT'):
            args.append('--height')
            args.append(os.environ.get('NZPBO_HEIGHT'))
        if os.environ.get('NZBPO_COLUMNS') != "":
            args.append('--columns')
            args.append(os.environ.get('NZBPO_COLUMNS'))
        if os.environ.get('NZBPO_FUNKY') != "none":
            args.append('--funky')
            args.append(os.environ.get('NZBPO_FUNKY'))
        if os.environ.get('NZBPO_TIMESTAMPS') != "yes":
            args.append('--disable')
            args.append('timestamps')
        if os.environ.get('NZBPO_FONT'):
            args.append('--override')
            args.append("font_all=%s" % os.environ.get('NZBPO_FONT'))
        if os.environ.get('NZBPO_FORMAT') == "jpg":
            args.append("-j")
            output_file = current_file + ".jpg"

    args.append('--output')
    args.append(output_file)
    args.append(current_file)

    return args

pathAppend = os.environ.get('NZBPO_ADDITIONALPATH')
path = os.environ['PATH']
STATUS = POSTPROCESS_ERROR

def getMediaFiles():
    matches = list()
    mediaContainer = os.environ['NZBPO_MEDIAEXTENSIONS'].split(',')
    for root, dirnames, filenames in os.walk(os.environ['NZBPP_DIRECTORY']):
        for extension in mediaContainer:
            for filename in fnmatch.filter(filenames, '*%s' % extension):
                if not "-sample" in filename:
                    matches.append(os.path.join(root, filename))

    return matches

def main():
    allFiles = getMediaFiles()
    for curFile in allFiles:
        fname = curFile + '.png'
        os.environ['PATH'] = pathAppend + ":" + path
        args = buildOptions(curFile)
        p = subprocess.Popen(args)
        p.communicate()
        if p.returncode == 0:
            STATUS = POSTPROCESS_SUCCESS
            print "[INFO] successfully generated contact sheet %s" % fname
        else:
            STATUS = POSTPROCESS_ERROR
            print "[ERROR] there went something wrong creating %s" % fname

    sys.exit(STATUS)


main()

#Should never happen at all!
sys.exit(STATUS)
